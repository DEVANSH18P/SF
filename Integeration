#SF Calender API Integeration 
public class GoogleCalendarService {
    private static final String GOOGLE_CALENDAR_URL = 'https://www.googleapis.com/calendar/v3/calendars/primary/events';
    private static final String ACCESS_TOKEN = 'YOUR_ACCESS_TOKEN_HERE'; // Store securely in Named Credentials

    public static String createEvent(String eventTitle, String eventDescription, String startTime, String endTime) {
        Http http = new Http();
        HttpRequest request = new HttpRequest();
        
        request.setEndpoint(GOOGLE_CALENDAR_URL);
        request.setMethod('POST');
        request.setHeader('Authorization', 'Bearer ' + ACCESS_TOKEN);
        request.setHeader('Content-Type', 'application/json');
        
        String body = '{"summary": "' + eventTitle + '",'
                     + '"description": "' + eventDescription + '",'
                     + '"start": {"dateTime": "' + startTime + '", "timeZone": "UTC"},'
                     + '"end": {"dateTime": "' + endTime + '", "timeZone": "UTC"}'
                     + '}';
        
        request.setBody(body);
        
        HttpResponse response = http.send(request);
        
        if (response.getStatusCode() == 200 || response.getStatusCode() == 201) {
            return 'Event Created Successfully: ' + response.getBody();
        } else {
            return 'Error: ' + response.getBody();
        }
    }
}


# Calling Function
String result = GoogleCalendarService.createEvent(
    'Sales Meeting',
    'Discuss quarterly targets',
    '2025-03-01T10:00:00Z',
    '2025-03-01T11:00:00Z'
);
System.debug(result);


# SF News API Integeration

public class NewsApiService {
    private static final String NEWS_API_URL = 'https://newsapi.org/v2/everything?q=';
    private static final String API_KEY = 'YOUR_NEWS_API_KEY'; // Store securely in Named Credentials

    public static List<NewsArticle> getNews(String keyword) {
        Http http = new Http();
        HttpRequest request = new HttpRequest();

        request.setEndpoint(NEWS_API_URL + EncodingUtil.urlEncode(keyword, 'UTF-8') + '&apiKey=' + API_KEY);
        request.setMethod('GET');
        request.setHeader('Content-Type', 'application/json');

        HttpResponse response = http.send(request);
        List<NewsArticle> articles = new List<NewsArticle>();

        if (response.getStatusCode() == 200) {
            Map<String, Object> results = (Map<String, Object>) JSON.deserializeUntyped(response.getBody());
            List<Object> articlesList = (List<Object>) results.get('articles');

            for (Object obj : articlesList) {
                Map<String, Object> article = (Map<String, Object>) obj;
                articles.add(new NewsArticle(
                    (String) article.get('title'),
                    (String) article.get('description'),
                    (String) article.get('url'),
                    (String) article.get('urlToImage')
                ));
            }
        } else {
            System.debug('Error: ' + response.getBody());
        }
        return articles;
    }

    public class NewsArticle {
        public String title;
        public String description;
        public String url;
        public String imageUrl;

        public NewsArticle(String title, String description, String url, String imageUrl) {
            this.title = title;
            this.description = description;
            this.url = url;
            this.imageUrl = imageUrl;
        }
    }
}

# Calling Function 

List<NewsApiService.NewsArticle> news = NewsApiService.getNews('Salesforce');
for (NewsApiService.NewsArticle article : news) {
    System.debug('Title: ' + article.title);
    System.debug('URL: ' + article.url);
}

